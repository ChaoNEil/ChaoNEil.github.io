<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on ChaoNEil</title>
        <link>http://localhost:1313/posts/</link>
        <description>Recent content in Posts on ChaoNEil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 01 Feb 2024 11:45:00 +0530</lastBuildDate>
        <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Malware Traffic Analysis (My thought Process)</title>
            <link>http://localhost:1313/posts/malware-traffic-analysis/</link>
            <pubDate>Thu, 01 Feb 2024 11:45:00 +0530</pubDate>
            
            <guid>http://localhost:1313/posts/malware-traffic-analysis/</guid>
            <description>Hello blue teamers, this is my first traffic analysis writeup for my future reference and also to document my self-learning journey in Cyber Security, so I will keep this short and simple while going through how i approached this Wireshark network packet capture (pcap) file.
(Remember , through this write-up, i am talking to me, my future self. If any random people reads it, forgive me for any mistakes. Enjoy! )</description>
            <content type="html"><![CDATA[<p>Hello blue teamers, this is my first traffic analysis writeup for my future reference and also to document my self-learning journey in Cyber Security, so I will keep this short and simple while going through how i approached this Wireshark network packet capture (pcap) file.</p>
<p><strong><em>(Remember , through this write-up, i am talking to me, my future self.
If any random people reads it, forgive me for any mistakes. Enjoy! )</em></strong></p>
<p>For those of you who does not know what Wireshark is or are new to this field :
<code>Wireshark is an open-source network protocol analyzer and packet capture tool. It is used for troubleshooting, analysis, development, and education in the field of network protocols and communications</code> - source: google.</p>
<p>This exercise is done from this website <a href="https://www.malware-traffic-analysis.net/">https://www.malware-traffic-analysis.net/</a>.</p>
<p>I will go through my thought process by doing a traffic analysis of a pcap file.</p>
<p><em>&quot;^&quot; symbol here signifies that this particular section is skippable.</em></p>
<hr>
<h2 id="traffic-analysis---funkylizards-2021-08-19"><strong>TRAFFIC ANALYSIS - FUNKYLIZARDS (2021-08-19</strong></h2>
<p><strong>THE SCENARIO</strong></p>
<p>So we are given a pcap file and and LAN segment data in the website. The LAN segment data signifies our host IP range. There is also the domain name and domain controller given, which is , for this exercise are, <code>funkylizards.com</code> and <code>110.8.19.8 - Funkylizard-DC</code> respectively</p>
<hr>
<p><strong>THE ANALYSIS</strong></p>
<h2 id="endpoints--conversations">Endpoints &amp; Conversations:</h2>
<p>After opening the file , we are presented with this:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201122240.png"></p>
<p>I know, this is all just too much information and noise . What is going on ?, But hold still.
Before we began the actual analysis , I always like to go to the <code>Endpoints</code> and <code>Converstations</code> view of Wireshark. It&rsquo;s under the &lsquo;Statistics&rsquo; tab :</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201124942.png"></p>
<p>It gives us a clear picture of the communication that has been taking place, to what endpoint device the communication is going , from where is it coming and how much information transfer is happening.  It really helps us to narrow down our analysis so we don&rsquo;t have to hit our heads in the wall and gives us a general idea of what is going on.
&ldquo;Endpoints&rdquo; &amp; &ldquo;Conversations&rdquo; are both great but if you ask me , i usually go check and spend my time more on &ldquo;Conversations&rdquo; tab.</p>
<p>But before we can analyze further, don&rsquo;t forget to tick only <code>IPv4</code> under the protocols tab on the left side of the &ldquo;Conversations&rdquo; window. This will narrow our search down further, which will greatly help us on our analysis.
<img src="/images/Malware_traffic_analysis/Pasted_image_20240202195742.png"></p>
<p>As we can see below , there is a recurring IP in Address A. This is must be the host IP and we can also see the highest packet size that is happening between our host IP and an unknown IP <code>46.99.175.149</code>, hmm seems suspicious. Here our curiosity intuition should kick in and we must note it down. We can also apply that IP address as a filter which will allow us to look at the packets based on the protocol.
To do that:
- right click on the IP and :
<img src="/images/Malware_traffic_analysis/Pasted_image_20240201131353.png">
This will show us the packets and at which protocol the transfer happened. However in this case, it was a miss. The protocol was TCP and not much information was there for me to move further so I left it there. A http would have been nice, but no matter.</p>
<p>Based on this info , we can also note down the IOC (indicators of compromise) as that IP address.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201125757.png"></p>
<hr>
<h2 id="the-filters">The Filters:</h2>
<p>After opening the pcap file, I usually get this ephemeral fear by lookin at all those different protocols and layers. But once i click the filter section and apply the <code>http</code> filter, everything falls into place.</p>
<p>I like to look at the packets from a higher level in the OSI/TCP/IP model, since <code>http</code> comes under the <strong>Application layer</strong> of the TCP/IP model, everything just makes sense and you can see requests and response directly without much noise.</p>
<p>Below , you can see the <code>http</code> filtered results from that pcap file. <em>So clean!</em> :</p>
<p>I would like to pause our analysis for a moment and would like to explain what the above picture means to an average joe.</p>
<pre tabindex="0"><code>Time: At the left side we can see the time in UTC format. It is said that the all reports should be in UTC format for readability so I have changed it to UTC in the wireshark settings. Default time settings of wireshark is different.

Source: This indicates our source ip, which in this case , is our victim host ip.

Destination: This indicates the ip address that our host is going to.

Protocol: HTTP in the application layer for extreme readablity and enjoyment.

Length: Self explanatory. Describes the volumn of data transferred.

Info: Types of HTTP req being made eg GET/POST followed by the actual resource and other information. 


Summary: Reading the first Req---&gt;
			On 2021-08-19 at approx 19:40 UTC this IP(10.8.10.101) requested 
			for a /ooiwy.pdf file located at this destination 185.244.41.29
			Since the host is requesting something from a server or a different ip address, it is called a GET req. If the host would want to put something on that server or trasnfer something to that server maybe a file or edit a file, it would be a POST req.

			GET and POST requests are the most common types of requests you will find in wireshark.
</code></pre><p><em><strong>Tip</strong></em> :
You can select any filter (http or tcp) then use the &ldquo;Conversations&rdquo; tab to get even more narrowed and filtered results which will greatly reduce the time taken to analyze and give you a more clearer picture of the whole scenario. You have to try it out for yourself to get a feel for it, you will see the difference.</p>
<p>We immediately see GET requests and also one POST request, interesting. Lets look into the first GET request. Its asking for a file named <code>ooiwy.pdf</code>.</p>
<p>Lets put our hacker googles on and further investigate it.</p>
<hr>
<h2 id="the-deep-analysis"><strong>The Deep analysis:</strong></h2>
<p>We can right click on the request and then follow it to HTTP stream. This will allow us to see inside of that particular pdf file, but the information will be scrambled.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201142740.png"></p>
<p>As we can see below, this is what the inside looks like:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201142917.png"></p>
<p>The data is all noisy except for one very important thing, and this really puts a smile on my face.
This part below is a clear indicator that this pdf file, in reality is not actually, a PDF file.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201143736.png"></p>
<p>&lsquo;<code>MZ.....@...!! This program cannot be run in DOS mode</code>&rsquo;
Whenever you see this writing, be clear that this is a PE (portable executable) file that is made to run on Windows Operating system. Which is indicative that this is a suspicious file that is designed to bring <del>death</del> and destruction to your windows machine.</p>
<p><strong><em>Interesting fact</em></strong>:
<code>The &quot;MZ&quot; is a signature of a Portable Executable (PE) file. It is located at the beginning of the file and indicates that the file is a PE file.</code>
also,
<code>The &quot;MZ&quot; signature is made up of the initials of Mark Zbikowski. He was one of the developers of the original MS-DOS executable file format.Â The letters &quot;MZ&quot; are also the hexadecimal characters 4D 5A, which are found in the first two bytes of the file.</code></p>
<p>Now , we can do one thing, we can further analyze this PE file by exporting it to our VM/local machine. I advice exporting it to your VM since we don&rsquo;t the nature of the file.
To export the file / artefact , click file, export objects as HTTP. Follow this:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201145653.png"></p>
<p>Now you will be presented with an object list of what you want to export. Here, select the pdf file and save it as <code>ooiwy.pdf.malz</code>.
I will put a .malz extension before saving it to my VM or host for extra safety measure.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201145942.png"></p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201150159.png"></p>
<p>Save it where ever you want.</p>
<p><em>Note</em>:
You will not always find objects/files to export from your pcaps. So in times like this , just skip the <strong>&ldquo;Exported File Analysis&rdquo;</strong> section in the blog.
Otherwise if you manage to export a file or two, read the &ldquo;Exported File analysis&rdquo; section, but i suggest to read through the section anyways as you will only learn more. Nothing wrong with learning more , amirite??</p>
<p><strong>After you have read the &ldquo;Exported File analysis&rdquo; section, meet me here again.</strong></p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201123918.png"></p>
<p>Lets analyze the POST request now:
Same drill as before, follow the http stream and see if you get any juicy details and/or export http to your machine .</p>
<p>I choose to export it&hellip;.
<img src="/images/Malware_traffic_analysis/Pasted_image_20240201153128.png">
filename 90. No extension given.
After exporting files like this , i always run &ldquo;<code>strings</code>&rdquo; command to it. Because i am afraid of running it.</p>
<p>Found this :</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201153425.png">
A huge list of running processes of the victim&rsquo;s machine</p>
<p>And also this:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201153535.png"></p>
<p>The System Info of the host . Here we can see all kinds of info, the hostname, username of host , machine specifications, MAC address, OS etc.</p>
<p>And all of this information was being sent to the destination ip <code>103.148.41.195:443</code> on https since this is a POST req. Also remember there was a mention of a <code>TRICKBOT</code> malware in the #<strong>Exported File Analysis</strong> section. This is what a Trickbot malware does, it steals information.</p>
<p><em>From google</em> :
TrickBot isÂ a banking Trojan that was first identified in 2016.Â It is a modular malware that can perform a variety of illicit operations, including:</p>
<pre><code>- Stealing credentials, data, and personal information
</code></pre>
<p>After conducting this very long investigation,  We can finally come to the conclusion and can summarize the report.</p>
<h2 id="exported-file-analysis--first-timers-read-this"><strong>^Exported File Analysis</strong> ( First Timers READ THIS)</h2>
<p><strong>(skip this if no exportable objects are present)</strong></p>
<p>After exporting the malicious PE file, you want to extract the hash.
Open command prompt or terminal and type:
<code>sha256sum &lt;your malware file&gt;</code>
The hash file will magically appear in your terminal. Now I want you to take that hash string and go to VirusTotal (<a href="https://www.virustotal.com/gui/home/search)">https://www.virustotal.com/gui/home/search)</a>. A great site to analyze those pesky little malwares hashes , urls and other files. It will provide you with information and tell you if it is malicious or not.
In our case , it is a direct HIT!</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201151401.png"></p>
<p>Ahh all red, fireworks in my eyes. Great work.</p>
<p>In the results there are several mentions of a <code>TrickBOT</code>. Keep this info in your mind. You can further explore other tabs of virusTotal if you want.</p>
<p>So , now we know that this <code>ooiwy.pdf</code> file is a malware. And the host downloaded it to their workstation. We don&rsquo;t know what is the malware is supposed to do. But remember, I told you to keep &ldquo;TRICKBOT&rdquo; in mind. A quick google search explains what a trickbot malware does.</p>
<p>However ,lets not get ahead of ourselves and analyze our next POST req. We still have work to do in wireshark.</p>
<p>Lets get to the &ldquo;exported file analysis&rdquo; section now, and will be back here if more exportable objects come.</p>
<hr>
<h2 id="the-conclusion">The Conclusion:</h2>
<p><strong>Executive Summary</strong>:</p>
<p>On 2021-08-19 at approximately 19:40 UTC, a Windows host used by
Monica Steele was infected with Trickbot malware.</p>
<hr>
<p>Â 
Â 
Â 
Â 
Â 
Â </p>
<p>That&rsquo;s it folks , I know this turned out to be huge analysis , but it was important for me to go through all of my thought process as this was my first blog post, well first technical post. My upcoming posts will be shorter, i promise :)</p>
<p>When i see a pcap file, i usually follow all the steps mention in this post, with some slight modifications based on my initial assessment of the pcap file. Here your intuition will help you and the pattern recognition. The more you do this type of exercises the more you will instinctively try to do what you are trying to do. I hope you get me.</p>
<p>Cheers , never stop learning and once again i will say, this blog post was written to help me , my future self , so if anyone other than me is reading this , i hope you learnt something new , even if it was only 1%, its enough.</p>
<p>Until next type, adios!</p>
]]></content>
        </item>
        
        <item>
            <title>First Blog</title>
            <link>http://localhost:1313/posts/first-blog/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/first-blog/</guid>
            <description>This will be the place where I put all of my blogs of stuff that I find interesting. It might not be interesting to you. It will be mostly blue team related content or anything that I find cool.
I have some blogs already written. I will upload them here, stay tuned.</description>
            <content type="html"><![CDATA[<p>This will be the place where I put all of my blogs of stuff that I find interesting. It might not be interesting to you. It will be mostly <strong>blue team</strong> related content or anything that I find cool.</p>
<p>I have some blogs already written. I will upload them here, stay tuned.</p>
]]></content>
        </item>
        
        <item>
            <title>HTB NeuroSync-D</title>
            <link>http://localhost:1313/posts/htb-sherlock-neurosync/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/htb-sherlock-neurosync/</guid>
            <description>Sherlocks - Easy Sherlock Scenario
NeuroSyncâ¢ is a leading suite of products focusing on developing cutting edge medical BCI devices, designed by the Korosaki Coorporaton. Recently, an APT group targeted them and was able to infiltrate their infrastructure and is now moving laterally to compromise more systems. It appears that they have even managed to hijack a large number of online devices by exploiting an N-day vulnerability. Your task is to find out how they were able to compromise the infrastructure and understand how to secure it.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---easy">Sherlocks - Easy</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>NeuroSyncâ¢ is a leading suite of products focusing on developing cutting edge medical BCI devices, designed by the Korosaki Coorporaton. Recently, an APT group targeted them and was able to infiltrate their infrastructure and is now moving laterally to compromise more systems. It appears that they have even managed to hijack a large number of online devices by exploiting an N-day vulnerability. Your task is to find out how they were able to compromise the infrastructure and understand how to secure it.</p>
<p>We are given these as <em>artefacts</em>:</p>
<p>access.log: Logs incoming HTTP requests to a web server, including details like IP addresses, request paths, timestamps, and response codes.</p>
<p>bci-device.log: Likely logs related to a Brain-Computer Interface (BCI) device, including device status, errors, or data transfers.</p>
<p>data-api.log: Likely logs related to interactions with a data API, including request/response details, errors, and performance metrics.</p>
<p>interface.log: Likely logs interactions with user interfaces, possibly capturing user input, events, or errors within a GUI or web interface.</p>
<p>redis.log: Logs from a Redis database, capturing system events, commands, errors, and other activities within the Redis instance.</p>
<hr>
<p>Q1.
What version of Next.js is the application using?</p>
<p>We can find this in the <code>interface.log</code></p>
<hr>
<p>Q2.
What local port is the Next.js-based application running on?</p>
<p>We can find this in the <code>interface.log</code></p>
<hr>
<p>Q3.
A critical Next.js vulnerability was released in March 2025, and this version appears to be affected. What is the CVE identifier for this vulnerability?</p>
<p>Google is your friend
CVE-2025-29927</p>
<hr>
<p>Q4.
The attacker tried to enumerate some static files that are typically available in the Next.js framework, most likely to retrieve its version. What is the first file he could get?</p>
<p>Enumerating some static files likely means he accessed the site , so we look at <code>access.log</code> to look for web requests and look for the first  <code>HTTP GET 200</code>.</p>
<hr>
<p>Q5.
Then the attacker appears to have found an endpoint that is potentially affected by the previously identified vulnerability. What is that endpoint?</p>
<p>Analyzing the access.log , we can see a whole lot of requests to the <code>/api/bci/analytics</code> endpoint and again in the <code>interface.log</code> we can see the same endpoint being accessed.</p>
<hr>
<p>Q6.
How many requests to this endpoint have resulted in an &ldquo;Unauthorized&rdquo; response?</p>
<p>In the access.log , we can only see 5 <code>401</code> unauthorized response code.</p>
<hr>
<p>Q7.
When is a successful response received from the vulnerable endpoint, meaning that the middleware has been bypassed?</p>
<p>After 401s  , we can see a 200 response . 2025-04-01 11:38:05</p>
<hr>
<p>Q8.
Given the previous failed requests, what will most likely be the final value for the vulnerable header used to exploit the vulnerability and bypass the middleware?</p>
<p>So in simple terms , in this exploit , it lets an attacker <strong>bypass authentication</strong> by sending a special header in their request in a Next.js app.</p>
<p>If a Next.js app protects a page using <strong>middleware</strong> (like checking if a user is logged in), an attacker can skip that middleware by adding this HTTP header:</p>
<pre tabindex="0"><code class="language-header" data-lang="header">x-middleware-subrequest: middleware
</code></pre><p>The attacker can increase the header using this pattern until it bypasses the auth check.</p>
<pre tabindex="0"><code>&#34;x-middleware-subrequest&#34;:&#34;middleware&#34;
&#34;x-middleware-subrequest&#34;:&#34;middleware:middleware&#34;
&#34;x-middleware-subrequest&#34;:&#34;middleware:middleware:middleware&#34;
</code></pre><p>There are 4 failed (401 code) <code>middleware</code> strings present in the <code>interface.log</code> and after that we can see a 200 response code indicating a success.
So the repetition of the middleware string should go up-to 5 .</p>
<p><code>middleware-subrequest: middleware:middleware:middleware:middleware:middleware</code>
This is the answer.</p>
<hr>
<p>Q9.
The attacker chained the vulnerability with an SSRF attack, which allowed them to perform an internal port scan and discover an internal API. On which port is the API accessible?</p>
<p>Look at <code>data-api.log</code> , match the timestamp of the attack, and we can see the port number 4000.</p>
<hr>
<p>Q10.
After the port scan, the attacker starts a brute-force attack to find some vulnerable endpoints in the previously identified API. Which vulnerable endpoint was found?</p>
<p>In the same log file as above , we can see the endpoint <code>/logs</code> is vulnerable followed by a <code>/etc/passwd</code> command on that endpoint.</p>
<hr>
<p>Q11.
When the vulnerable endpoint found was used maliciously for the first time?</p>
<p>On 2025-04-01 11:39:01 , the attacker accessed the <code>/etc/passwd</code> file from that endpoint for the first time.</p>
<hr>
<p>Q12.
What is the attack name the endpoint is vulnerable to?</p>
<p>We can see a bypass technique with unusual path traversal to read the <code>passwd</code> file.
This is a classic example of <code>Local file inclusion (LFI)</code>.</p>
<hr>
<p>Q13.
What is the name of the file that was targeted the last time the vulnerable endpoint was exploited?</p>
<p>Start from the bottom of data.api.log file , we can see <code>secret.key</code> file being accessed.</p>
<hr>
<p>Q14.
Finally, the attacker uses the sensitive information obtained earlier to create a special command that allows them to perform Redis injection and gain RCE on the system. What is the command string?</p>
<p>This question suggests we look in the <code>redis.log</code> file and we sure do see a base64 OS command there.</p>
<hr>
<p>Q15.
Once decoded, what is the command?</p>
<p>Decode the command on cyberchef.</p>
]]></content>
        </item>
        
        <item>
            <title>HTB Pikaptcha</title>
            <link>http://localhost:1313/posts/pipkapcha/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/pipkapcha/</guid>
            <description>Sherlocks - Easy Sherlock Scenario
Happy Grunwald contacted the sysadmin, Alonzo, because of issues he had downloading the latest version of Microsoft Office. He had received an email saying he needed to update, and clicked the link to do it. He reported that he visited the website and solved a captcha, but no office download page came back. Alonzo, who himself was bombarded with phishing attacks last year and was now aware of attacker tactics, immediately notified the security team to isolate the machine as he suspected an attack.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---easy">Sherlocks - Easy</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>Happy Grunwald contacted the sysadmin, Alonzo, because of issues he had downloading the latest version of Microsoft Office. He had received an email saying he needed to update, and clicked the link to do it. He reported that he visited the website and solved a captcha, but no office download page came back. Alonzo, who himself was bombarded with phishing attacks last year and was now aware of attacker tactics, immediately notified the security team to isolate the machine as he suspected an attack. You are provided with network traffic and endpoint artifacts to answer questions about what happened.</p>
<hr>
<p>Q1.
It is crucial to understand any payloads executed on the system for initial access. Analyzing registry hive for user happy grunwald. What is the full command that was run to download and execute the stager?</p>
<p>Analyzing user &ldquo;happy grunwald&rdquo;&rsquo;s hive with registry explorer; also follow the steps to load the transaction replay logs (.log1 and .log2) to load recent changes.</p>
<p>Go to the &ldquo;bookmarks&rdquo; tab to automatically view the important data.</p>
<p>Looking at RunMRU key because It&rsquo;s one of the best spots to find user-typed commands, we can see the full command that was run to download and execute the stager.</p>
<p>RunMRU (run most recently used) stores commands typed by the user into the Start run box (win+r).</p>
<hr>
<p>Q2.
At what time in UTC did the malicious payload execute?</p>
<p>We can see the time right there.</p>
<p>We now have a timeline to follow.</p>
<hr>
<p>Q3.
The payload which was executed initially downloaded a PowerShell script and executed it in memory. What is sha256 hash of the script?</p>
<p>To answer this question , we will head back to the pcap file and filter for the ip we found before . We can see the file <code>office2024install.ps1</code> , export the file from the pcap and hash it up.</p>
<hr>
<p>Q4.
To which port did the reverse shell connect?</p>
<p>Analyze the powershell script that we just exported. Spits out base64 encoded text.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>strings office2024install.ps1
</span></span><span style="display:flex;"><span>&lt;base64string&gt;
</span></span></code></pre></div><p>Decode with cyberchef and remove null bytes to make it readable.
Here we can see the port of the reverse shell.</p>
<hr>
<p>Q5.
For how many seconds was the reverse shell connection established between C2 and the victim&rsquo;s workstation?</p>
<p>We will go back to the pcap file again filter for that ip but now with new found port <code>6969</code> .
<code>ip.addr == 43.205.115.44 &amp;&amp; tcp.port == 6969</code></p>
<p>Take the first packet&rsquo;s UTC time and last packet&rsquo;s UTC time and put it in a time duration calculator on google, and we will find the answer (in secs).</p>
<hr>
<p>Q6.
Attacker hosted a malicious Captcha to lure in users. What is the name of the function which contains the malicious payload to be pasted in victim&rsquo;s clipboard?</p>
<p>Use this filter
<code>ip.addr == 43.205.115.44 &amp;&amp; http</code>
and click on the last packet and select &rsquo;line based text data&rsquo; under packet data to see the source code and find the malicious function.</p>
<p>We can corelated this run command to the first question we answered, the <code>RunMRU key</code>.</p>
<p>The victim pasted this command into run and the <code>.ps1</code> file  executed a reverse shell that allowed the threat actor to further enumerate.</p>
]]></content>
        </item>
        
    </channel>
</rss>
