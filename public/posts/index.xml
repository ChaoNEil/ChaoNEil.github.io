<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on ChaoNEil</title>
        <link>http://localhost:1313/posts/</link>
        <description>Recent content in Posts on ChaoNEil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 01 Feb 2024 11:45:00 +0530</lastBuildDate>
        <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Malware Traffic Analysis (My thought Process)</title>
            <link>http://localhost:1313/posts/malware-traffic-analysis/</link>
            <pubDate>Thu, 01 Feb 2024 11:45:00 +0530</pubDate>
            
            <guid>http://localhost:1313/posts/malware-traffic-analysis/</guid>
            <description>Hello blue teamers, this is my first traffic analysis writeup for my future reference and also to document my self-learning journey in Cyber Security, so I will keep this short and simple while going through how i approached this Wireshark network packet capture (pcap) file.
(Remember , through this write-up, i am talking to me, my future self. If any random people reads it, forgive me for any mistakes. Enjoy! )</description>
            <content type="html"><![CDATA[<p>Hello blue teamers, this is my first traffic analysis writeup for my future reference and also to document my self-learning journey in Cyber Security, so I will keep this short and simple while going through how i approached this Wireshark network packet capture (pcap) file.</p>
<p><strong><em>(Remember , through this write-up, i am talking to me, my future self.
If any random people reads it, forgive me for any mistakes. Enjoy! )</em></strong></p>
<p>For those of you who does not know what Wireshark is or are new to this field :
<code>Wireshark is an open-source network protocol analyzer and packet capture tool. It is used for troubleshooting, analysis, development, and education in the field of network protocols and communications</code> - source: google.</p>
<p>This exercise is done from this website <a href="https://www.malware-traffic-analysis.net/">https://www.malware-traffic-analysis.net/</a>.</p>
<p>I will go through my thought process by doing a traffic analysis of a pcap file.</p>
<p><em>&quot;^&quot; symbol here signifies that this particular section is skippable.</em></p>
<hr>
<h2 id="traffic-analysis---funkylizards-2021-08-19"><strong>TRAFFIC ANALYSIS - FUNKYLIZARDS (2021-08-19</strong></h2>
<p><strong>THE SCENARIO</strong></p>
<p>So we are given a pcap file and and LAN segment data in the website. The LAN segment data signifies our host IP range. There is also the domain name and domain controller given, which is , for this exercise are, <code>funkylizards.com</code> and <code>110.8.19.8 - Funkylizard-DC</code> respectively</p>
<hr>
<p><strong>THE ANALYSIS</strong></p>
<h2 id="endpoints--conversations">Endpoints &amp; Conversations:</h2>
<p>After opening the file , we are presented with this:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201122240.png"></p>
<p>I know, this is all just too much information and noise . What is going on ?, But hold still.
Before we began the actual analysis , I always like to go to the <code>Endpoints</code> and <code>Converstations</code> view of Wireshark. It&rsquo;s under the &lsquo;Statistics&rsquo; tab :</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201124942.png"></p>
<p>It gives us a clear picture of the communication that has been taking place, to what endpoint device the communication is going , from where is it coming and how much information transfer is happening.  It really helps us to narrow down our analysis so we don&rsquo;t have to hit our heads in the wall and gives us a general idea of what is going on.
&ldquo;Endpoints&rdquo; &amp; &ldquo;Conversations&rdquo; are both great but if you ask me , i usually go check and spend my time more on &ldquo;Conversations&rdquo; tab.</p>
<p>But before we can analyze further, don&rsquo;t forget to tick only <code>IPv4</code> under the protocols tab on the left side of the &ldquo;Conversations&rdquo; window. This will narrow our search down further, which will greatly help us on our analysis.
<img src="/images/Malware_traffic_analysis/Pasted_image_20240202195742.png"></p>
<p>As we can see below , there is a recurring IP in Address A. This is must be the host IP and we can also see the highest packet size that is happening between our host IP and an unknown IP <code>46.99.175.149</code>, hmm seems suspicious. Here our curiosity intuition should kick in and we must note it down. We can also apply that IP address as a filter which will allow us to look at the packets based on the protocol.
To do that:
- right click on the IP and :
<img src="/images/Malware_traffic_analysis/Pasted_image_20240201131353.png">
This will show us the packets and at which protocol the transfer happened. However in this case, it was a miss. The protocol was TCP and not much information was there for me to move further so I left it there. A http would have been nice, but no matter.</p>
<p>Based on this info , we can also note down the IOC (indicators of compromise) as that IP address.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201125757.png"></p>
<hr>
<h2 id="the-filters">The Filters:</h2>
<p>After opening the pcap file, I usually get this ephemeral fear by lookin at all those different protocols and layers. But once i click the filter section and apply the <code>http</code> filter, everything falls into place.</p>
<p>I like to look at the packets from a higher level in the OSI/TCP/IP model, since <code>http</code> comes under the <strong>Application layer</strong> of the TCP/IP model, everything just makes sense and you can see requests and response directly without much noise.</p>
<p>Below , you can see the <code>http</code> filtered results from that pcap file. <em>So clean!</em> :</p>
<p>I would like to pause our analysis for a moment and would like to explain what the above picture means to an average joe.</p>
<pre tabindex="0"><code>Time: At the left side we can see the time in UTC format. It is said that the all reports should be in UTC format for readability so I have changed it to UTC in the wireshark settings. Default time settings of wireshark is different.

Source: This indicates our source ip, which in this case , is our victim host ip.

Destination: This indicates the ip address that our host is going to.

Protocol: HTTP in the application layer for extreme readablity and enjoyment.

Length: Self explanatory. Describes the volumn of data transferred.

Info: Types of HTTP req being made eg GET/POST followed by the actual resource and other information. 


Summary: Reading the first Req---&gt;
			On 2021-08-19 at approx 19:40 UTC this IP(10.8.10.101) requested 
			for a /ooiwy.pdf file located at this destination 185.244.41.29
			Since the host is requesting something from a server or a different ip address, it is called a GET req. If the host would want to put something on that server or trasnfer something to that server maybe a file or edit a file, it would be a POST req.

			GET and POST requests are the most common types of requests you will find in wireshark.
</code></pre><p><em><strong>Tip</strong></em> :
You can select any filter (http or tcp) then use the &ldquo;Conversations&rdquo; tab to get even more narrowed and filtered results which will greatly reduce the time taken to analyze and give you a more clearer picture of the whole scenario. You have to try it out for yourself to get a feel for it, you will see the difference.</p>
<p>We immediately see GET requests and also one POST request, interesting. Lets look into the first GET request. Its asking for a file named <code>ooiwy.pdf</code>.</p>
<p>Lets put our hacker googles on and further investigate it.</p>
<hr>
<h2 id="the-deep-analysis"><strong>The Deep analysis:</strong></h2>
<p>We can right click on the request and then follow it to HTTP stream. This will allow us to see inside of that particular pdf file, but the information will be scrambled.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201142740.png"></p>
<p>As we can see below, this is what the inside looks like:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201142917.png"></p>
<p>The data is all noisy except for one very important thing, and this really puts a smile on my face.
This part below is a clear indicator that this pdf file, in reality is not actually, a PDF file.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201143736.png"></p>
<p>&lsquo;<code>MZ.....@...!! This program cannot be run in DOS mode</code>&rsquo;
Whenever you see this writing, be clear that this is a PE (portable executable) file that is made to run on Windows Operating system. Which is indicative that this is a suspicious file that is designed to bring <del>death</del> and destruction to your windows machine.</p>
<p><strong><em>Interesting fact</em></strong>:
<code>The &quot;MZ&quot; is a signature of a Portable Executable (PE) file. It is located at the beginning of the file and indicates that the file is a PE file.</code>
also,
<code>The &quot;MZ&quot; signature is made up of the initials of Mark Zbikowski. He was one of the developers of the original MS-DOS executable file format.Â The letters &quot;MZ&quot; are also the hexadecimal characters 4D 5A, which are found in the first two bytes of the file.</code></p>
<p>Now , we can do one thing, we can further analyze this PE file by exporting it to our VM/local machine. I advice exporting it to your VM since we don&rsquo;t the nature of the file.
To export the file / artefact , click file, export objects as HTTP. Follow this:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201145653.png"></p>
<p>Now you will be presented with an object list of what you want to export. Here, select the pdf file and save it as <code>ooiwy.pdf.malz</code>.
I will put a .malz extension before saving it to my VM or host for extra safety measure.</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201145942.png"></p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201150159.png"></p>
<p>Save it where ever you want.</p>
<p><em>Note</em>:
You will not always find objects/files to export from your pcaps. So in times like this , just skip the <strong>&ldquo;Exported File Analysis&rdquo;</strong> section in the blog.
Otherwise if you manage to export a file or two, read the &ldquo;Exported File analysis&rdquo; section, but i suggest to read through the section anyways as you will only learn more. Nothing wrong with learning more , amirite??</p>
<p><strong>After you have read the &ldquo;Exported File analysis&rdquo; section, meet me here again.</strong></p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201123918.png"></p>
<p>Lets analyze the POST request now:
Same drill as before, follow the http stream and see if you get any juicy details and/or export http to your machine .</p>
<p>I choose to export it&hellip;.
<img src="/images/Malware_traffic_analysis/Pasted_image_20240201153128.png">
filename 90. No extension given.
After exporting files like this , i always run &ldquo;<code>strings</code>&rdquo; command to it. Because i am afraid of running it.</p>
<p>Found this :</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201153425.png">
A huge list of running processes of the victim&rsquo;s machine</p>
<p>And also this:</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201153535.png"></p>
<p>The System Info of the host . Here we can see all kinds of info, the hostname, username of host , machine specifications, MAC address, OS etc.</p>
<p>And all of this information was being sent to the destination ip <code>103.148.41.195:443</code> on https since this is a POST req. Also remember there was a mention of a <code>TRICKBOT</code> malware in the #<strong>Exported File Analysis</strong> section. This is what a Trickbot malware does, it steals information.</p>
<p><em>From google</em> :
TrickBot isÂ a banking Trojan that was first identified in 2016.Â It is a modular malware that can perform a variety of illicit operations, including:</p>
<pre><code>- Stealing credentials, data, and personal information
</code></pre>
<p>After conducting this very long investigation,  We can finally come to the conclusion and can summarize the report.</p>
<h2 id="exported-file-analysis--first-timers-read-this"><strong>^Exported File Analysis</strong> ( First Timers READ THIS)</h2>
<p><strong>(skip this if no exportable objects are present)</strong></p>
<p>After exporting the malicious PE file, you want to extract the hash.
Open command prompt or terminal and type:
<code>sha256sum &lt;your malware file&gt;</code>
The hash file will magically appear in your terminal. Now I want you to take that hash string and go to VirusTotal (<a href="https://www.virustotal.com/gui/home/search)">https://www.virustotal.com/gui/home/search)</a>. A great site to analyze those pesky little malwares hashes , urls and other files. It will provide you with information and tell you if it is malicious or not.
In our case , it is a direct HIT!</p>
<p><img src="/images/Malware_traffic_analysis/Pasted_image_20240201151401.png"></p>
<p>Ahh all red, fireworks in my eyes. Great work.</p>
<p>In the results there are several mentions of a <code>TrickBOT</code>. Keep this info in your mind. You can further explore other tabs of virusTotal if you want.</p>
<p>So , now we know that this <code>ooiwy.pdf</code> file is a malware. And the host downloaded it to their workstation. We don&rsquo;t know what is the malware is supposed to do. But remember, I told you to keep &ldquo;TRICKBOT&rdquo; in mind. A quick google search explains what a trickbot malware does.</p>
<p>However ,lets not get ahead of ourselves and analyze our next POST req. We still have work to do in wireshark.</p>
<p>Lets get to the &ldquo;exported file analysis&rdquo; section now, and will be back here if more exportable objects come.</p>
<hr>
<h2 id="the-conclusion">The Conclusion:</h2>
<p><strong>Executive Summary</strong>:</p>
<p>On 2021-08-19 at approximately 19:40 UTC, a Windows host used by
Monica Steele was infected with Trickbot malware.</p>
<hr>
<p>Â 
Â 
Â 
Â 
Â 
Â </p>
<p>That&rsquo;s it folks , I know this turned out to be huge analysis , but it was important for me to go through all of my thought process as this was my first blog post, well first technical post. My upcoming posts will be shorter, i promise :)</p>
<p>When i see a pcap file, i usually follow all the steps mention in this post, with some slight modifications based on my initial assessment of the pcap file. Here your intuition will help you and the pattern recognition. The more you do this type of exercises the more you will instinctively try to do what you are trying to do. I hope you get me.</p>
<p>Cheers , never stop learning and once again i will say, this blog post was written to help me , my future self , so if anyone other than me is reading this , i hope you learnt something new , even if it was only 1%, its enough.</p>
<p>Until next type, adios!</p>
]]></content>
        </item>
        
        <item>
            <title>First Blog</title>
            <link>http://localhost:1313/posts/first-blog/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/first-blog/</guid>
            <description>This will be the place where I put all of my blogs of stuff that I find interesting. It might not be interesting to you. It will be mostly blue team related content or anything that I find cool.
I have some blogs already written. I will upload them here, stay tuned.</description>
            <content type="html"><![CDATA[<p>This will be the place where I put all of my blogs of stuff that I find interesting. It might not be interesting to you. It will be mostly <strong>blue team</strong> related content or anything that I find cool.</p>
<p>I have some blogs already written. I will upload them here, stay tuned.</p>
]]></content>
        </item>
        
        <item>
            <title>HTB Heartbreaker</title>
            <link>http://localhost:1313/posts/heartbreaker/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/heartbreaker/</guid>
            <description>Sherlocks - Medium Sherlock Scenario
Delicate situation alert! The customer has just been alerted about concerning reports indicating a potential breach of their database, with information allegedly being circulated on the darknet market. As the Incident Responder, it&amp;rsquo;s your responsibility to get to the bottom of it. Your task is to conduct an investigation into an email received by one of their employees, comprehending the implications, and uncovering any possible connections to the data breach.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---medium">Sherlocks - Medium</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>Delicate situation alert! The customer has just been alerted about concerning reports indicating a potential breach of their database, with information allegedly being circulated on the darknet market. As the Incident Responder, it&rsquo;s your responsibility to get to the bottom of it. Your task is to conduct an investigation into an email received by one of their employees, comprehending the implications, and uncovering any possible connections to the data breach. Focus on examining the artifacts provided by the customer to identify significant events that have occurred on the victim&rsquo;s workstation.</p>
<p><strong>Artifacts</strong>:</p>
<p>We have been given artifacts collected using automated triage tools such as KAPE.</p>
<hr>
<p>Q1
The victim received an email from an unidentified sender. What email address was used for the suspicious email?</p>
<p>In this directory , there is a email for the user ash
<code>wb-ws-01/C/Users/ash.williams/AppData/Local/Microsoft/Outlook/ash@gmail.com.ost</code></p>
<p>This is a Microsoft Outlook OST file , and to load the file , we must setup an outlook account and its a hassle to do all that just for this challenge. Hence to solve this issue i have looked upon the internet and found a tool just for this purpose.</p>
<p><code>https://github.com/avranju/pff-tools</code></p>
<p>To use :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>pffexport path/to/the/ost/file
</span></span></code></pre></div><p>After exporting , it will create a directory with a <code>.export</code> extension. We can browse it normally with our file explorer.</p>
<p>Under <code>Inbox</code> , among all the other emails , <code>Message00004</code> seems the most suspicious</p>
<pre tabindex="0"><code>ashwilliams012100@gmail.com.ost.export/Root - Mailbox/IPM_SUBTREE/Inbox/Message00004
</code></pre><p>There is also an attachment available which is a <code>.tiff</code> file, &ldquo;a Tagged Image File Format&rdquo;.
<img src="/images/heartbreaker/1.png">
We can also download the &ldquo;privateMembership.tiff&rdquo; file which is a <code>.exe</code> file.</p>
<p>All this fits the scenario that we have been told.</p>
<p>Coming back to the question, we can find the sender&rsquo;s email in the <code>OutlookHeaders.txt</code> file.</p>
<p><code>ImSecretlyYours@proton.me</code></p>
<hr>
<p>Q2
It appears there&rsquo;s a link within the email. Can you provide the complete URL where the malicious binary file was hosted?</p>
<p>Copy the URL from the <code>message.html</code> file inside the <code>Message00004</code> directory.</p>
<p><code>hxxp[://]44[.]206[.]187[.]144:9000/Superstar_MemberCard[.]tiff[.]exe</code></p>
<p>This is the defanged url.</p>
<hr>
<p>Q3
The threat actor managed to identify the victim&rsquo;s AWS credentials. From which file type did the threat actor extract these credentials?</p>
<p><code>.ost</code> is the file format we are analyzing and extracting information from.</p>
<hr>
<p>Q4
Provide the actual IAM credentials of the victim found within the artifacts.</p>
<p>This can be found in the <code>[Gmail]</code> directory under <code>IPM_SUBTREE/</code>.</p>
<pre tabindex="0"><code>[Gmail]/Drafts/Message00001/Message.html
</code></pre><p><img src="/images/heartbreaker/4.png"></p>
<hr>
<p>Q5
When (UTC) was the malicious binary activated on the victim&rsquo;s workstation?</p>
<p>For this we will look at the various windows event logs, both default event logs and SYSMON event logs.
Usually they are stored here <code>%SYSTEMROOT%\System32\Winevt\Logs%</code></p>
<p>We can use a tool from EricZimmerman forensics to make the analysis faster.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>.\EvtxECmd.exe -d path/to/even/logs --csv /path/to/save
</span></span></code></pre></div><p>This tool will parse all the logs into a format compatible with forensic analysis tools like <strong>Timeline Explorer</strong>, which we will use next.</p>
<p>*Timeline Explorer:
Filter for <code>.tiff</code> in <code>Executable Info</code> and look for a <code>process creation</code>.</p>
<p><img src="/images/heartbreaker/5.png"></p>
<p>Going further right will show us that a process for <code>SuperStar_MemberCard.tiff.exe</code> has started :
<img src="/images/heartbreaker/5a.png"></p>
<p><img src="/images/heartbreaker/5b.png">
Above, going further left will give us the time.</p>
<p><code>2024-03-13 10:45:02</code></p>
<hr>
<p>Q6
Following the download and execution of the binary file, the victim attempted to search for specific keywords on the internet. What were those keywords?</p>
<p>Here lies the firefox profile data &mdash;&gt; <code>wb-ws-01\C\Users\ash.williams\AppData\Roaming\Mozilla\Firefox\Profiles\hy42b1gc.default-release</code></p>
<p>Files under this directory will be in <code>.sqlite</code> which can be opened using <code>DB browser</code>.</p>
<p>Coming back to the question, the victim searched this after downloading the malicious binary.<br>
<img src="/images/heartbreaker/6.png"></p>
<p>We can also take the epoch time and convert it into UTC to further confirm this as the
answer.</p>
<p><img src="/images/heartbreaker/6a.png"></p>
<hr>
<p>Q7
At what time (UTC) did the binary successfully send an identical malicious email from the victim&rsquo;s machine to all the contacts?</p>
<p>For this we will again go back to the <code>.ost</code> email file.
This information can be found here &mdash;&gt;</p>
<p><code>ashwilliams012100@gmail.com.ost.export/Root - Mailbox/IPM_SUBTREE/[Gmail]/Sent Mail/Message00005/OutlookHeaders.txt</code></p>
<p><img src="/images/heartbreaker/7.png"></p>
<p>If we look at the <code>Recipients.txt</code> file , we can see that this email has been forwarded to all <code>ash.williams's</code> contact.</p>
<hr>
<p>Q8
How many recipients were targeted by the distribution of the said email excluding the victim&rsquo;s email account?</p>
<p>From the <code>Recipients.txt</code> file,  we can count the number.</p>
<p><img src="/images/heartbreaker/8.png"></p>
<hr>
<p>Q9
Which legitimate program was utilized to obtain details regarding the domain controller?</p>
<p>Go through <code>TimeLine Explorer</code> and clear previous filters. Now search for
&ldquo;<code>Superstar_MemberCard.tiff.exe</code>&rdquo; , sort the time and look at <code>&quot;payload data6</code></p>
<p><img src="/images/heartbreaker/9.png"></p>
<p><code>nltest.exe</code></p>
<hr>
<p>Q10
Specify the domain (including sub-domain if applicable) that was used to download the tool for exfiltration.</p>
<p>Timeline Explorer&mdash;&gt;
We can see <code>Winscp</code> which is a file transfer tool, probably used to exfiltrate data.</p>
<p><img src="/images/heartbreaker/10.png"></p>
<p><code>us[.]softrader[.]com</code></p>
<hr>
<p>Q11
The threat actor attempted to conceal the tool to elude suspicion. Can you specify the name of the folder used to store and hide the file transfer program?</p>
<p>From the previous image ;
Answer is <code>HelpDesk-Tools</code></p>
<hr>
<p>Q12
Under which MITRE ATT&amp;CK technique does the action described in question #11 fall?</p>
<p>This attempt to conceal the tool(helpdesk-tools) to elude suspicion is called
<code>Masquerading</code></p>
<hr>
<p>Q13
Can you determine the minimum number of files that were compressed before they were extracted?</p>
<p><img src="/images/heartbreaker/13.png"></p>
<p>The attacker compressed all files above and either compressed it into <code>WinSCP.zip</code> or <code>WB-WS-01.zip</code> then exfiltrated using <code>winscp</code> tool.</p>
<p>26 is the ans.</p>
<hr>
<p>Q14
To exfiltrate data from the victim&rsquo;s workstation, the binary executed a command. Can you provide the complete command used for this action?</p>
<p>With this search :</p>
<p><img src="/images/heartbreaker/14.png"></p>
<p>and with the info from the previous question,
we can see the binary execute a command with the script <code>maintenanceScript.txt </code> after the compression of the data.</p>
<p>The Executable Info column provides the full command used by the malware.
<img src="/images/heartbreaker/14a.png"></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span><span style="color:#e6db74">&#34;C:\Users\Public\HelpDesk-Tools\WinSCP.com&#34;</span> /script=<span style="color:#e6db74">&#34;C:\Users\Public\HelpDesk-Tools\maintenanceScript.txt&#34;</span> 
</span></span></code></pre></div><hr>
]]></content>
        </item>
        
        <item>
            <title>HTB Knock-Knock</title>
            <link>http://localhost:1313/posts/knock-knock/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/knock-knock/</guid>
            <description>Sherlocks - Medium Sherlock Scenario
A critical Forela Dev server was targeted by a threat group. The Dev server was accidentally left open to the internet which it was not supposed to be. The senior dev Abdullah told the IT team that the server was fully hardened and it&amp;rsquo;s still difficult to comprehend how the attack took place and how the attacker got access in the first place. Forela recently started its business expansion in Pakistan and Abdullah was the one IN charge of all infrastructure deployment and management.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---medium">Sherlocks - Medium</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>A critical Forela Dev server was targeted by a threat group. The Dev server was accidentally left open to the internet which it was not supposed to be. The senior dev Abdullah told the IT team that the server was fully hardened and it&rsquo;s still difficult to comprehend how the attack took place and how the attacker got access in the first place. Forela recently started its business expansion in Pakistan and Abdullah was the one IN charge of all infrastructure deployment and management. The Security Team need to contain and remediate the threat as soon as possible as any more damage can be devastating for the company, especially at the crucial stage of expanding in other region. Thankfully a packet capture tool was running in the subnet which was set up a few months ago. A packet capture is provided to you around the time of the incident (1-2) days margin because we don&rsquo;t know exactly when the attacker gained access. As our forensics analyst, you have been provided the packet capture to assess how the attacker gained access. Warning : This Sherlock will require an element of OSINT to complete fully.</p>
<p><strong>Artefacts</strong>:</p>
<p>A wireshark capture file (.pcap) .</p>
<hr>
<p>Q1.
Which ports did the attacker find open during their enumeration phase?</p>
<p>I know for a fact that nmap sends <code>TCP SYN</code> packets to target server to scope out possible open ports.
I went into wireshark&rsquo;s <code>statistics ---&gt; Endpoints</code> and sorted by most packets. Found a weird looking (3.109.209.43) recurring IP address sending tons of syn packets to a static destination address (172.31.39.46)
Possible sus ip : 3.109.209.43
<img src="/images/knockknock/1.png"></p>
<p>To further clear out the noise i tweaked the filter a bit:
<code>ip.addr==3.109.209.43</code>
This confirmed even further that this IP is the attacker-owned IP.
The <code>172.31.39.46</code> might be the dev server.</p>
<p>Now to know how many open ports the attacker found , we must look for <code>SYN/ACK</code> packets . <code>Syn/ack</code> packets indicate that the server responded and there is a service on the target server.</p>
<p>This is the final filter I used  :
<code>ip.addr==3.109.209.43 &amp;&amp; tcp.flags.syn == 1 &amp;&amp; tcp.flags.ack == 1</code>
(here 1 indicates a Yes , 0 is null/no).</p>
<p>Apply this filter, the first 5 packets will include the answer ports.</p>
<p>Answer: <code>21,22,3306,6379,8086</code></p>
<p>I advice you all to watch this video,
How NMAP Works and How to Detect Port Scans in Wireshark (A good refresher):
<a href="https://www.youtube.com/watch?v=Maec4f2gt2c">https://www.youtube.com/watch?v=Maec4f2gt2c</a></p>
<hr>
<p>Q2.
Whats the UTC time when attacker started their attack against the server?</p>
<p>Remove the previous final filter and apply initial filter
<code>ip.addr==3.109.209.43</code></p>
<p>This will show us the nmap scan.</p>
<p><img src="/images/knockknock/2.png"></p>
<hr>
<p>Q3.
What&rsquo;s the MITRE Technique ID of the technique attacker used to get initial access?</p>
<p>Using the filter above , scroll down near the end. You will see some TCP packets sent to port 21 and eventually you will see FTP packets . Going down further , you will see user <code>alonzo.spire</code> trying to gain access to his account followed by a brute force password spraying attack by the attacker.</p>
<p><img src="/images/knockknock/3.png"></p>
<p>After port scanning, the attacker found several open ports and has decided to attack FTP port 21 instead. He opted for password spraying (a form of brute force attack) in hopes of getting a hit for the user <code>alzono.spire</code> or <code>tony.shephard</code> or <code>lin.bayley</code>.</p>
<p>The MITRE technique ID of this attack is <code>T1110.003</code>.</p>
<hr>
<p>Q4.
What are valid set of credentials used to get initial foothold?</p>
<p>Keep scrolling down looking through the requests , you will finally see a <code>230 login successful</code> ftp packet. Then look for the last username and password that led to this login successful event, you will get your cred.</p>
<p>This is the cred that worked  <code>tony.shephard:Summer2023!</code></p>
<p>There might be a better and more efficient way of doing this but i did it this way.</p>
<hr>
<p>Q5.
What is the Malicious IP address utilized by the attacker for initial access?</p>
<p>From the investigation that i did up until this point, the ip <code>3.109.209.43</code> is definitely malicious.</p>
<p>Answer : <code>3.109.209.43</code></p>
<hr>
<p>Q6.
What is name of the file which contained some config data and credentials?</p>
<p>Using this filter <code>ip.addr==3.109.209.43 &amp;&amp; ftp</code>, we can see the attacker access <code>.backup</code> (a hidden file), <code>fetch.sh</code> and enumerating the file server.</p>
<p>To see what is inside those two files , we can either :
<code>export objects ---&gt; ftp-data</code> then save those files to our VM or
use the <code>ftp-data</code> filter and follow tcp stream on those 2 files to read without exporting.</p>
<p><code>ip.addr==3.109.209.43 &amp;&amp; ftp || ftp-data</code></p>
<p>To answer this question , i found the config data and creds from the <code>.backup</code> file .</p>
<p>At first glance , i thought i knew what was going on, but after carefully analyzing this, honestly have no idea. I only recognize the command <code>iptables</code> so this might be doing something related to getting access to a particular port ? idk .</p>
<p>Further analysis of this will be done in question 8.
<img src="/images/knockknock/6.png"></p>
<p>The attacker also got creds to a mysql database server from the <code>.fetch</code> file, see below ss:
<img src="/images/knockknock/6a.png"></p>
<hr>
<p>Q7.
Which port was the critical service running?</p>
<p>See the port above, <code>22456</code>. However that critical service is hidden until we do the pre-requisites. Analysis on the next question.</p>
<hr>
<p>Q8.
Whats the name of technique used to get to that critical service?</p>
<p>I had no clue what this technique was before i googled it and learnt about it, pretty interesting concept too.
Basically <code>port knocking</code> is like a sequence of requests to open a door.</p>
<p>By looking at the .backup file , the sequence of requests someone has to make is to ports is <code>29999 â 50234 â 45087</code> in the right order and timing (withing 5 secs). The service then recognizes this as a &ldquo;knock&rdquo; from a trusted client. It then runs an iptables command to allow that IP access to port <code>24456</code>.</p>
<p>Pretty cool huh! It was cool but it seems this was very easily bypassed. Now this technique is seen less solely but can be seen along with other layers of security.</p>
<p>Answer : <code>port knocking</code></p>
<hr>
<p>Q9.
Which ports were required to interact with to reach the critical service?</p>
<p><code>29999 â 50234 â 45087</code></p>
<hr>
<p>Q10.
Whats the UTC time when interaction with previous question ports ended?</p>
<p>The time when the port knocking sequence has ended. I simply added the port numbers as filters.</p>
<p><code>ip.addr==3.109.209.43 &amp;&amp; tcp.port == 29999 || tcp.port == 50234 || tcp.port == 45087</code></p>
<p>Grab the last packet&rsquo;s timestamp from the filter output.</p>
<hr>
<p>Q11.
What are set of valid credentials for the critical service?</p>
<p>We can see the creds in the <code>.backup</code> file . See the screenshot from question 6.</p>
<hr>
<p>Q12.
At what UTC Time attacker got access to the critical server?</p>
<p>I used this filter <code>ip.addr==3.109.209.43 &amp;&amp; tcp.port==24456</code></p>
<p>I was glancing through each packets looking at the hex dump pane and found out that the packet number <code>210797</code> includes the password that i saw in the <code>.backup</code> file.</p>
<p><img src="/images/knockknock/12.png"></p>
<p>Also after following <code>TCP stream</code> on this packet, we can see the complete conversation gaining further insights. The hex dump pane also showed that this is an internal FTP server.
<img src="/images/knockknock/12a.png"></p>
<p>Answer <code>21/03/2023 11:00:01</code></p>
<hr>
<p>Q13.
Whats the AWS AccountID and Password for the developer &ldquo;Abdullah&rdquo;?</p>
<p>To get this answer , i had to look at the packets again. Why did wireshark , if this was confirmed ftp packets , not showing me in ftp-packets-format like before ?  That format was easier to read and analyze, instead the ftp data is thrown at me like normal TCP packets.
I had to consult my old friend Google and it turns out Wireshark is doing this because the port is a non-standard FTP port. Wireshark can only analyze ftp-data nicely when it is coming from a standard ftp port.</p>
<p>To fix this , i decoded the packets to ftp . Right click on a non-clear ftp packet and <code>decode as ftp</code> .</p>
<p><img src="/images/knockknock/13.png"></p>
<p>The display is now clear, and the FTP data appears properly formatted, just as it should be.</p>
<p>I <code>followed TCP stream</code> and there are some files the attacker downloaded as well as the entire conversation.</p>
<p><img src="/images/knockknock/13a.png"></p>
<p>Now to view them for myself, I <code>exported objects</code> from now reprocessed ftp data.</p>
<p><img src="/images/knockknock/13b.png"></p>
<p>I found the AWS AccountID and Password for the developer &ldquo;Abdullah&rdquo; inside <code>.archived.sql</code> mysql dump.</p>
<p>Answer : <code>391629733297','yiobkod0986Y[adij@IKBDS</code></p>
<hr>
<p>Q14.
Whats the deadline for hiring developers for forela?</p>
<p>I found this inside <code>Tasks_to_get_Done.docx</code>
Answer: <code>30/08/2023</code></p>
<hr>
<p>Q15.
When did CEO of forela was scheduled to arrive in pakistan?</p>
<p>Open <code>reminder.txt</code>
Answer: <code>08/03/2023</code></p>
<hr>
<p>Q16.
The attacker was able to perform directory traversel and escape the chroot jail.This caused attacker to roam around the filesystem just like a normal user would. Whats the username of an account other than root having /bin/bash set as default shell?</p>
<p>Followed the TCP stream and read the conversation to find the answer. The attacker traversed the directory , accessed the <code>/etc/passwd</code> file and did basic host enumeration commands like whoami etc.</p>
<p>Answer: <code>cyberjunkie</code></p>
<hr>
<p>Q17.
Whats the full path of the file which lead to ssh access of the server by attacker?</p>
<p>The attacker also downloaded a <code>.reminder</code> file , I opened that file and saw a note telling me to clean a github repo to avoid leaking sensitive stuff.
I think this is how the attacker got access to ssh which is evident from the future questions.</p>
<p>The path where the attacker found this .reminder file is
<code>/opt/reminders/.reminder</code>.</p>
<p>I found this while i was reading through the TCP stream conversation.</p>
<p>Answer: <code>/opt/reminders/.reminder</code>. `</p>
<hr>
<p>Q18.
Whats the SSH password which attacker used to access the server and get full access?</p>
<p>Was very lost on this one, wasn&rsquo;t finding anything on wireshark either apart from that one note from <code>reminder.txt</code> telling us that there is github repository with sensitive information. I remembered that in the investigation&rsquo;s scenario , it mentioned an OSINT element . So i googled this exact term <code>github forela</code> and found a public repo:</p>
<p><img src="/images/knockknock/18.png"></p>
<p>I explored the <code>internal-dev.yaml</code> file then went into <code>commit history</code> and found a removed commit. There i found the SSH user <code>cyberjunkie</code> and his pass <code>YHUIhnollouhdnoamjndlyvbl398782bapd</code>.</p>
<p>Never commit sensitive information directly to the repository especially if it&rsquo;s public as it can be accessed by anyone and poses a serious security risk.</p>
<p>Answer: <code>YHUIhnollouhdnoamjndlyvbl398782bapd</code></p>
<hr>
<p>Q19.
Whats the full url from where attacker downloaded ransomware?</p>
<p>Using this filter , i was able to get the ssh server&rsquo;s IP (<code>172.31.39.46</code>)</p>
<p><code>ip.addr==3.109.209.43 &amp;&amp; ssh</code></p>
<p><img src="/images/knockknock/19.png"></p>
<p>Since the attacker now have gained access to the ssh server with previously found creds, the download for the ransomware will happen from that ssh server , so i used it in my filters:</p>
<p><code>ip.addr==172.31.39.46 &amp;&amp; http</code></p>
<p>and found a GET request for a <code>Ransomware2_server.zip</code> file after scrolling through the packets.
<img src="/images/knockknock/19a.png"></p>
<p>Answer:<code>http[:]//13.233.179.35/PKCampaign/Targets/Forela/Ransomware2_server.zip</code></p>
<hr>
<p>Q20.
Whats the tool/util name and version which attacker used to download ransomware?</p>
<p>Can be found in the packet&rsquo;s HTTP layer information.
<img src="/images/knockknock/20.png"></p>
<p>Answer: <code>Wget/1.21.2</code></p>
<p>Q21.
Whats the ransomware name?</p>
<p>Did this in a VM.</p>
<p>I exported the ransomware file from wireshark and unzipped it. There i found the source code for the ransomware. Its written in python and the name is <code>GonnaCry</code>.
There is also a presentation slide explaining the malware&rsquo;s feature but its in Portuguese and i dont understand Portuguese.</p>
<p><code>GonnaCry</code></p>
<hr>
<h5 id="analysis-summary">Analysis Summary:</h5>
<p>An attacker from IP <strong>3.109.209.43</strong> exploited an exposed Dev server (<strong>172.31.39.46</strong>) by scanning for open ports and using leaked FTP credentials to gain initial access. The TA (threat Actor) bypassed further controls using PORT KNOCKING to unlock a hidden service and extracted internal credentials from a config file.</p>
<p>The TA then used an exposed SSH password found in a public GitHub repo related to that Dev server to gain full access as user <code>cyberjunkie</code> which the attacker then further used to download a ransomware named GonnaCry via <code>wget</code> tool. Also multiple internal files including AWS creds , MySQL database creds and company secrets were compromised.</p>
<hr>
<p>All documenting and solving took me almost 2 days . Worth it though.</p>
<hr>
]]></content>
        </item>
        
        <item>
            <title>HTB Kuber</title>
            <link>http://localhost:1313/posts/kuber/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/kuber/</guid>
            <description>Sherlocks - Easy Sherlock Scenario
As a digital forensics investigator, you received an urgent request from a client managing multiple proxy Kubernetes clusters. The client reports unusual behavior in one of their development environments, where they were testing a proxy via SSH. This environment was exposed to the internet, raising concerns about a potential security breach. You have been provided with a dump of the kube-system namespace, as most of the testing activity occurred there.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---easy">Sherlocks - Easy</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>As a digital forensics investigator, you received an urgent request from a client managing multiple proxy Kubernetes clusters. The client reports unusual behavior in one of their development environments, where they were testing a proxy via SSH. This environment was exposed to the internet, raising concerns about a potential security breach. You have been provided with a dump of the <code>kube-system</code> namespace, as most of the testing activity occurred there. Your task is to thoroughly analyze the data and determine if the system has been compromised.</p>
<hr>
<p><strong>Artifcats</strong>:</p>
<p>We are given kube-system dump files which are basically kubernetes resource data files.</p>
<p>I am using VS code for this one.</p>
<hr>
<p>Q1.
At which NodePort is theÂ <code>ssh-deployment</code>Â Kubernetes service exposed for external access?</p>
<p>We look into <code>service.yaml</code>. This file has the information relating to exposed network applications that is running.
Filter for <code>NodePort</code> and we can find the app <code>ssh-deployment</code> that has the nodeport of 31337.</p>
<p><img src="/images/kuber/1.png"></p>
<hr>
<p>Q2.
What is the ClusterIP of the kubernetes cluster?</p>
<p>We can see the cluster ip above.</p>
<hr>
<p>Q3.
What is the flag value inside ssh-config configmap?</p>
<p>Filter for <code>ssh-config</code> in <code>configmaps.yaml</code> file and we can see the flag.</p>
<p><code>ConfigMaps.yaml</code> file are used to store non-sensitive configuration data like environment variables or configuration files.</p>
<hr>
<p>Q4.
What is the value of password (in plaintext) which is found inside ssh-deployment via secret?</p>
<p>For this one, we will head over to the <code>secrets.yaml</code> file, obviously!</p>
<p>Scroll down for the password, and decode the base64 string with cyberchef.
<img src="/images/kuber/4.png"></p>
<hr>
<p>Q5.
What is the name of the malicious pod?</p>
<p>This one was a bit tricky , so I had to filter out by the IP address we found earlier.
Inside the <code>pods.yaml</code> file , we will find the name of pod  where we find the IP.</p>
<p><img src="/images/kuber/5.png">
If we scroll to the right we can find the ip.</p>
<hr>
<p>Q6.
What is the image attacker is using to create malicious pod?</p>
<p>In the same place as the previous question, we will find the name of the malicious image .
<img src="/images/kuber/6.png"></p>
<hr>
<p>Q7.
Whats the attacker IP?</p>
<p>Again , same place , we find the attacker IP with a suspicious port number 4444, classic.
<img src="/images/kuber/7.png"></p>
<hr>
]]></content>
        </item>
        
        <item>
            <title>HTB NeuroSync-D</title>
            <link>http://localhost:1313/posts/htb-sherlock-neurosync/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/htb-sherlock-neurosync/</guid>
            <description>Sherlocks - Easy Sherlock Scenario
NeuroSyncâ¢ is a leading suite of products focusing on developing cutting edge medical BCI devices, designed by the Korosaki Coorporaton. Recently, an APT group targeted them and was able to infiltrate their infrastructure and is now moving laterally to compromise more systems. It appears that they have even managed to hijack a large number of online devices by exploiting an N-day vulnerability. Your task is to find out how they were able to compromise the infrastructure and understand how to secure it.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---easy">Sherlocks - Easy</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>NeuroSyncâ¢ is a leading suite of products focusing on developing cutting edge medical BCI devices, designed by the Korosaki Coorporaton. Recently, an APT group targeted them and was able to infiltrate their infrastructure and is now moving laterally to compromise more systems. It appears that they have even managed to hijack a large number of online devices by exploiting an N-day vulnerability. Your task is to find out how they were able to compromise the infrastructure and understand how to secure it.</p>
<p>We are given these as <em>artefacts</em>:</p>
<p>access.log: Logs incoming HTTP requests to a web server, including details like IP addresses, request paths, timestamps, and response codes.</p>
<p>bci-device.log: Likely logs related to a Brain-Computer Interface (BCI) device, including device status, errors, or data transfers.</p>
<p>data-api.log: Likely logs related to interactions with a data API, including request/response details, errors, and performance metrics.</p>
<p>interface.log: Likely logs interactions with user interfaces, possibly capturing user input, events, or errors within a GUI or web interface.</p>
<p>redis.log: Logs from a Redis database, capturing system events, commands, errors, and other activities within the Redis instance.</p>
<hr>
<p>Q1.
What version of Next.js is the application using?</p>
<p>We can find this in the <code>interface.log</code></p>
<hr>
<p>Q2.
What local port is the Next.js-based application running on?</p>
<p>We can find this in the <code>interface.log</code></p>
<hr>
<p>Q3.
A critical Next.js vulnerability was released in March 2025, and this version appears to be affected. What is the CVE identifier for this vulnerability?</p>
<p>Google is your friend
CVE-2025-29927</p>
<hr>
<p>Q4.
The attacker tried to enumerate some static files that are typically available in the Next.js framework, most likely to retrieve its version. What is the first file he could get?</p>
<p>Enumerating some static files likely means he accessed the site , so we look at <code>access.log</code> to look for web requests and look for the first  <code>HTTP GET 200</code>.</p>
<hr>
<p>Q5.
Then the attacker appears to have found an endpoint that is potentially affected by the previously identified vulnerability. What is that endpoint?</p>
<p>Analyzing the access.log , we can see a whole lot of requests to the <code>/api/bci/analytics</code> endpoint and again in the <code>interface.log</code> we can see the same endpoint being accessed.</p>
<hr>
<p>Q6.
How many requests to this endpoint have resulted in an &ldquo;Unauthorized&rdquo; response?</p>
<p>In the access.log , we can only see 5 <code>401</code> unauthorized response code.</p>
<hr>
<p>Q7.
When is a successful response received from the vulnerable endpoint, meaning that the middleware has been bypassed?</p>
<p>After 401s  , we can see a 200 response . 2025-04-01 11:38:05</p>
<hr>
<p>Q8.
Given the previous failed requests, what will most likely be the final value for the vulnerable header used to exploit the vulnerability and bypass the middleware?</p>
<p>So in simple terms , in this exploit , it lets an attacker <strong>bypass authentication</strong> by sending a special header in their request in a Next.js app.</p>
<p>If a Next.js app protects a page using <strong>middleware</strong> (like checking if a user is logged in), an attacker can skip that middleware by adding this HTTP header:</p>
<pre tabindex="0"><code class="language-header" data-lang="header">x-middleware-subrequest: middleware
</code></pre><p>The attacker can increase the header using this pattern until it bypasses the auth check.</p>
<pre tabindex="0"><code>&#34;x-middleware-subrequest&#34;:&#34;middleware&#34;
&#34;x-middleware-subrequest&#34;:&#34;middleware:middleware&#34;
&#34;x-middleware-subrequest&#34;:&#34;middleware:middleware:middleware&#34;
</code></pre><p>There are 4 failed (401 code) <code>middleware</code> strings present in the <code>interface.log</code> and after that we can see a 200 response code indicating a success.
So the repetition of the middleware string should go up-to 5 .</p>
<p><code>middleware-subrequest: middleware:middleware:middleware:middleware:middleware</code>
This is the answer.</p>
<hr>
<p>Q9.
The attacker chained the vulnerability with an SSRF attack, which allowed them to perform an internal port scan and discover an internal API. On which port is the API accessible?</p>
<p>Look at <code>data-api.log</code> , match the timestamp of the attack, and we can see the port number 4000.</p>
<hr>
<p>Q10.
After the port scan, the attacker starts a brute-force attack to find some vulnerable endpoints in the previously identified API. Which vulnerable endpoint was found?</p>
<p>In the same log file as above , we can see the endpoint <code>/logs</code> is vulnerable followed by a <code>/etc/passwd</code> command on that endpoint.</p>
<hr>
<p>Q11.
When the vulnerable endpoint found was used maliciously for the first time?</p>
<p>On 2025-04-01 11:39:01 , the attacker accessed the <code>/etc/passwd</code> file from that endpoint for the first time.</p>
<hr>
<p>Q12.
What is the attack name the endpoint is vulnerable to?</p>
<p>We can see a bypass technique with unusual path traversal to read the <code>passwd</code> file.
This is a classic example of <code>Local file inclusion (LFI)</code>.</p>
<hr>
<p>Q13.
What is the name of the file that was targeted the last time the vulnerable endpoint was exploited?</p>
<p>Start from the bottom of data.api.log file , we can see <code>secret.key</code> file being accessed.</p>
<hr>
<p>Q14.
Finally, the attacker uses the sensitive information obtained earlier to create a special command that allows them to perform Redis injection and gain RCE on the system. What is the command string?</p>
<p>This question suggests we look in the <code>redis.log</code> file and we sure do see a base64 OS command there.</p>
<hr>
<p>Q15.
Once decoded, what is the command?</p>
<p>Decode the command on cyberchef.</p>
]]></content>
        </item>
        
        <item>
            <title>HTB Pikaptcha</title>
            <link>http://localhost:1313/posts/pipkapcha/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/pipkapcha/</guid>
            <description>Sherlocks - Easy Sherlock Scenario
Happy Grunwald contacted the sysadmin, Alonzo, because of issues he had downloading the latest version of Microsoft Office. He had received an email saying he needed to update, and clicked the link to do it. He reported that he visited the website and solved a captcha, but no office download page came back. Alonzo, who himself was bombarded with phishing attacks last year and was now aware of attacker tactics, immediately notified the security team to isolate the machine as he suspected an attack.</description>
            <content type="html"><![CDATA[<h2 id="sherlocks---easy">Sherlocks - Easy</h2>
<p><strong>Sherlock Scenario</strong></p>
<p>Happy Grunwald contacted the sysadmin, Alonzo, because of issues he had downloading the latest version of Microsoft Office. He had received an email saying he needed to update, and clicked the link to do it. He reported that he visited the website and solved a captcha, but no office download page came back. Alonzo, who himself was bombarded with phishing attacks last year and was now aware of attacker tactics, immediately notified the security team to isolate the machine as he suspected an attack. You are provided with network traffic and endpoint artifacts to answer questions about what happened.</p>
<hr>
<p>Q1.
It is crucial to understand any payloads executed on the system for initial access. Analyzing registry hive for user happy grunwald. What is the full command that was run to download and execute the stager?</p>
<p>Analyzing user &ldquo;happy grunwald&rdquo;&rsquo;s hive with registry explorer; also follow the steps to load the transaction replay logs (.log1 and .log2) to load recent changes.</p>
<p>Go to the &ldquo;bookmarks&rdquo; tab to automatically view the important data.</p>
<p>Looking at RunMRU key because It&rsquo;s one of the best spots to find user-typed commands, we can see the full command that was run to download and execute the stager.</p>
<p>RunMRU (run most recently used) stores commands typed by the user into the Start run box (win+r).</p>
<hr>
<p>Q2.
At what time in UTC did the malicious payload execute?</p>
<p>We can see the time right there.</p>
<p>We now have a timeline to follow.</p>
<hr>
<p>Q3.
The payload which was executed initially downloaded a PowerShell script and executed it in memory. What is sha256 hash of the script?</p>
<p>To answer this question , we will head back to the pcap file and filter for the ip we found before . We can see the file <code>office2024install.ps1</code> , export the file from the pcap and hash it up.</p>
<hr>
<p>Q4.
To which port did the reverse shell connect?</p>
<p>Analyze the powershell script that we just exported. Spits out base64 encoded text.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>strings office2024install.ps1
</span></span><span style="display:flex;"><span>&lt;base64string&gt;
</span></span></code></pre></div><p>Decode with cyberchef and remove null bytes to make it readable.
Here we can see the port of the reverse shell.</p>
<hr>
<p>Q5.
For how many seconds was the reverse shell connection established between C2 and the victim&rsquo;s workstation?</p>
<p>We will go back to the pcap file again filter for that ip but now with new found port <code>6969</code> .
<code>ip.addr == 43.205.115.44 &amp;&amp; tcp.port == 6969</code></p>
<p>Take the first packet&rsquo;s UTC time and last packet&rsquo;s UTC time and put it in a time duration calculator on google, and we will find the answer (in secs).</p>
<hr>
<p>Q6.
Attacker hosted a malicious Captcha to lure in users. What is the name of the function which contains the malicious payload to be pasted in victim&rsquo;s clipboard?</p>
<p>Use this filter
<code>ip.addr == 43.205.115.44 &amp;&amp; http</code>
and click on the last packet and select &rsquo;line based text data&rsquo; under packet data to see the source code and find the malicious function.</p>
<p>We can corelated this run command to the first question we answered, the <code>RunMRU key</code>.</p>
<p>The victim pasted this command into run and the <code>.ps1</code> file  executed a reverse shell that allowed the threat actor to further enumerate.</p>
]]></content>
        </item>
        
        <item>
            <title>Reverse Engineering fundamentals</title>
            <link>http://localhost:1313/posts/reverse-engineer-fundamentals/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/reverse-engineer-fundamentals/</guid>
            <description>These are all notes I took while learning reverse engineering (still a work in progress). I plan to complement them with further research, including videos and other resources. This is very uncharted territory for me so bear with me.
RE theory
When you compile a binary in C , what happens ? gcc myProgram.c -o myProgram.exe
It goes through these 4 stages , this is called Language Processing System.
(Preprocessor &amp;mdash;&amp;gt; Compiler &amp;mdash;&amp;gt; Assembler &amp;mdash;&amp;gt; Linker ) &amp;mdash;-&amp;gt; myProgram.</description>
            <content type="html"><![CDATA[<p>These are all notes I took while learning reverse engineering (still a work in progress). I plan to complement them with further research, including videos and other resources. This is very uncharted territory for me so bear with me.</p>
<hr>
<p><strong>RE theory</strong></p>
<h3 id="when-you-compile-a-binary-in-c--what-happens-">When you compile a binary in C , what happens ?</h3>
<p><code>gcc myProgram.c -o myProgram.exe</code></p>
<p>It goes through these 4 stages , this is called <code>Language Processing System</code>.</p>
<p>(Preprocessor &mdash;&gt; Compiler &mdash;&gt; Assembler &mdash;&gt; Linker ) &mdash;-&gt; myProgram.exe</p>
<p>&ndash;</p>
<h4 id="now-what-happens-when-we-run-that-program-exe-file-">Now what happens when we run that program exe file ?</h4>
<p>The program goes through a Loader. The loader will take the program and load it into main memory or   <em><strong>RAM</strong></em>.</p>
<p>Inside the RAM, there will be sections loaded by the loader inside the PE (portable executable file or exe) file. Common ones are <code>.text, .data, Heap, Stack.</code></p>
<pre tabindex="0"><code>.text: has all the program (exe) file instructions. Basically all translated to the assembly code from high level C code.  

.data: stores Initialized and static data
			eg: int variableName = 10;

.bss (block starting symbol): stores uninitialized varibles . 
						eg: int vairableName; 
</code></pre><pre tabindex="0"><code>Heap: 
stores Dynamically allocated variables (allocated at runtime). 
it grows towards higher memory addresses , which means DOWNward visually speaking. 0x00000000
EXAMPLE: initialzing a array[], we dont know the size before hand until the user tells us how many numbers they want


Stack:
stores local variables, function parameters, return adresses and grows toward lower memory addresses, which means UPward visually speaking.
0x7fffffff
</code></pre><h4 id="okay-now-where-does-it-go-from-the-ram">Okay, now Where does it go from the RAM?</h4>
<p>It goes to the CPU (central processing Unit). Inside the CPU, the instructions from the RAM comes to the CU (control unit). From the CU , it goes to the ALU (arithmetic control unit) which executes instruction and sets <em>registers</em> and flags.</p>
<p>RAM &mdash;&gt; CPU ( [control unit &mdash;&gt; ALU &mdash;&gt; different registers, back and forth] )</p>
<p>Registers are very fast and ephemeral ( lasts very less ).</p>
<p><strong>Some Registers</strong>:</p>
<pre tabindex="0"><code>+------------------------+ 64-bit â RAX
|        RAX             |
+------------+-----------+
             |
           EAX (bits 0â31) 32bit
             |
           AX  (bits 0â15) 16bit
           / \
         AH  AL (8 bits each)

This is the x86/x64 CPU register architecture. Basically the accumulator or any register can be named differently based on cpu architectures.

So when we are going to work with a 64bit exe file or a 32bit, expect different names for the registers.

Similarilly for the stack pointer:
	RSP, ESP or SP(8bits)

....and it goes on for every register.
</code></pre><p><em>Accumulators</em> (rax,eax,ax):
used for input/output, arithmetic and return values from functions.</p>
<p><em>Base</em> (rbx, ebx, bx):
used for indexed addressing</p>
<p><em>Counter</em> (rcx, ecx, cx):
stores loop count variables in iterative operations. eg for loops/while loops</p>
<p><em>Data</em> (rdx, edx, dx):
input/output operations and sometimes extends rax for multiply /divide</p>
<p><em>Stack Pointer</em> (rsp, esp, sp):
stores current position within the stack</p>
<p><em>Base Pointer</em> (rbp, ebp, bp):
helps in referencing parameter and other stack variables by providing a fixed point in the stack, so they can be accessed using simple offsets. Holds the base of our current stack frame</p>
<p><em>Instruction Pointer</em> (rip,eip,ip):
stores next instruction to be executed</p>
<p><em>Source and Destination registers</em> (rsi/esi , rdi/edi ):
used as a source and destination indexes for string operations</p>
<p><em>flag registers</em>:
CF (carry flag) , ZF(zero flag), TF (trap flag)</p>
<p>These can be nicely visualized in <code>x64 debugger</code>, a fantastic RE (debugging) tool.</p>
<p><strong>some Common x86  Instructions</strong>:</p>
<p>Read from right to left. Forget your everyday English reading convention.</p>
<pre tabindex="0"><code>`mov eax, ebx`    copies the value in ebx to eax .  

`mov eax, [0x70000000]`   move whatever value is in the memory address `[]` to eax. Brackets means &#34;go-to-that-address first then load that data&#34;

`nop`   No operation and do absolutely nothing,

`lea eax, [ebx+esi*4]`   load effective address, similar to move but it loads ebx+esi*4 instead of the data of that address like we saw at the bracketed [] address do. 

xor eax, eax;or eax, ebx
they take 2 registers , compare them, and stores the result in a flag register.

There are many examples but i am not goin to note it down.
 etc ........
</code></pre><p><em>Stack operations:</em>
&hellip;.also instructions</p>
<p><code>push eax; pop ebx</code></p>
<p><code>push</code> means putting values to the top of the stack frame and <code>pop</code> means , removing them from the top of the stack.</p>
<p><em>Call instructions:</em>
<code>call 0x41400000</code>    (sometimes we might see the function name here instead of hex value.)</p>
<p>calls a function; moves the value of EIP to stack and sets EIP to the start of the function at 0x41400000.  So that it knows what to do after finishing that function, i.e. , starting the next instruction.</p>
<p><code>ret</code>   Pops the return address off of the stack into EIP.</p>
<p>All these cluster of <em>info</em> happens in the CPU</p>
<hr>
<p>Day 2.</p>
<h3 id="inner-workings-of-the-stack">Inner Workings of the Stack</h3>
<pre tabindex="0"><code>^
I    0x00000000   Lower level addresses        (ESP)
I
I
I
I
I    0x7fffffff      Higher level addresses         (EBP)
I
</code></pre><p>The stack grows UP, to lower level addresses. When we say pop something of from the stack, it always means remove a item from the TOP of the stack.</p>
<p>To solidify the concepts here , do some practice CrackMEs.</p>
<p>Also learning how to use  <em>x64 debugger</em> helps big time as you can see registers , function calls on the stack and much more.</p>
<p><strong>No more notes now atm. Will add more when I understand more or might not add here at all.</strong></p>
<hr>
]]></content>
        </item>
        
        <item>
            <title>SOC Active Directory Project with Splunk, Shuffle and Slack</title>
            <link>http://localhost:1313/posts/soc-lab/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            
            <guid>http://localhost:1313/posts/soc-lab/</guid>
            <description>Logical Diagram / Setup Structure CompanyX-ADDC01 ip 139.x.x.x publicCompanyX-ADDC01 ip 10.51.96.4 privateTest instance ip 139.x.x.x publicTest instance	ip 10.51.96.3 privateCompanyX-Splunk ip 139.x.x.x publicCompanyX-Splunk ip 10.51.96.5 private Using Vultr cloud resources , I set up 3 different machines:
1 splunk ubuntu machine that will be the splunk server1 Active directory machine 1 test windows machineI have set up a VPC network so that all 3 machines could interact nicely.</description>
            <content type="html"><![CDATA[<h2 id="logical-diagram--setup-structure">Logical Diagram / Setup Structure</h2>
<p><img src="/images/soc-lab-project/0.png"></p>
<pre tabindex="0"><code>CompanyX-ADDC01 ip 139.x.x.x   public
CompanyX-ADDC01 ip 10.51.96.4  private

Test instance   ip 139.x.x.x   public
Test instance	ip 10.51.96.3  private
	
CompanyX-Splunk ip 139.x.x.x   public
CompanyX-Splunk ip 10.51.96.5  private
</code></pre><p>Using Vultr cloud resources , I set up 3 different machines:</p>
<pre><code>1 splunk ubuntu machine that will be the splunk server
1 Active directory machine 
1 test windows machine
</code></pre>
<p>I have set up a VPC network so that all 3 machines could interact nicely. Its basically a virtual isolated network inside the cloud. Due to VPC, i got assigned private IPs for my machines (IPs starting with 10).</p>
<p>The public and private VPC IPs are all mentioned above.</p>
<p>I have also set up firewall rules so that only I (from my local machine) with my public IP address, can access these machines on the cloud.</p>
<p><img src="/images/soc-lab-project/1-edited.png"></p>
<p>At this point in time, i can ping all of my 3 machines:</p>
<p><img src="/images/soc-lab-project/2.png"></p>
<hr>
<h2 id="configuring-active-directory">Configuring Active Directory</h2>
<p><code>TLDR: Configured AD server, created new user and joined a machine to newly created domain.</code></p>
<p>Now I will configure AD to my <code>CompanyX-ADDC01</code> machine and promote it to Domain Controller.</p>
<p>Root domain name : <code>CompanyX.local</code>
Password : <code>[Redacted]</code></p>
<p>Added a user <code>Jenny Smith</code>
Password: <code>[Redacted]</code></p>
<p><img src="/images/soc-lab-project/3.png"></p>
<p>Now that i have created AD and DC server and a user, i will join the windows test machine to this Domain and authenticate it to the server using <code>jenny smith</code> user.</p>
<p>In the process of joining test-machine to the domain server, this error occurred :</p>
<p><img src="/images/soc-lab-project/4.png"></p>
<p>Googling this tells me that it usually happens when there is something wrong with DNS resolution. Maybe <code>COMPANYX</code> was not able to resolve to a IP address?</p>
<p><img src="/images/soc-lab-project/5.png"></p>
<p>The DNS field is empty which is causing the error. Filling the preferred DNS field with the ip address (<code>10.51.96.4</code>) of the DC server fixed this issue.</p>
<p><img src="/images/soc-lab-project/6.png"></p>
<p>Domain joined !</p>
<p>After restarting test-machine , it will have a option to sign in as Other user. Here, sign in as <code>JSmith</code> user.</p>
<p><img src="/images/soc-lab-project/7.png">
<code>COMPANYX\</code> is needed because it signifies the domain of that user.</p>
<p><img src="/images/soc-lab-project/8.png"></p>
<p>After entering the creds, i encountered this error. Remote login is disabled.
To enable it, i accessed this test-machine from my vultr dashboard and allowed remote connections
<img src="/images/soc-lab-project/9.png"></p>
<p>Added user <code>JSmith</code> to remote desktop users.</p>
<p><img src="/images/soc-lab-project/10.png"></p>
<p>Now i can RDP into test-machine normally as <code>JSmith</code>.</p>
<p><img src="/images/soc-lab-project/11.png"></p>
<hr>
<h2 id="installing-and-configuring-splunk">Installing and Configuring SPLUNK</h2>
<p><em>and Sending Telemetry from windows</em></p>
<p>Installed splunk free trial:</p>
<pre tabindex="0"><code>splunk username : [Redacted]
splunk password : [Redacted]
</code></pre><p>However to get it running on my host laptop, i had to first:</p>
<ol>
<li>add my public IP address in vultr cloud platform for splunk</li>
</ol>
<p><img src="/images/soc-lab-project/12.png"></p>
<ol start="2">
<li>and on the <code>ubuntu-splunk</code> machine set up a firewall rule to accept incoming traffic to port 8000  which is where splunk lives .</li>
</ol>
<p><img src="/images/soc-lab-project/13.png"></p>
<p>&ndash;</p>
<p>I went to splunk indexes to set up my AD index.</p>
<p><code>Splunk indexes are a repository of data stored in a structured and searchable format after being processed and transformed into events</code>
~Google</p>
<p>To receive data from other machines, i set up a port 9997 which is the default.</p>
<p><code>Forwarding and receiving &gt;&gt; Reveive data &gt;&gt; set port</code></p>
<p>Also to be able to forward data , we must install splunk universal forwarder on target machines which in my case , my target machine is the <code>test-machine</code> that has the <code>JSmith</code> user.</p>
<p>I RDPed into test machine and installed the splunk forwarder. Edited the <code>inputs.conf</code> file to include security logs from event viewer and Restarted the <code>splunk services</code> all as ADMIN.</p>
<p><code>inputs.conf file</code>
<img src="/images/soc-lab-project/14.png"></p>
<p>Again i had to <code>ufw allow 9997</code> to allow telemetry to flow to our host laptop.</p>
<p><img src="/images/soc-lab-project/15.png"></p>
<p>And after doing all that , i had data finally.</p>
<p>Now i had to do all that again for my Domain controller machine.</p>
<p>End result:</p>
<p><img src="/images/soc-lab-project/16.png"></p>
<p>I have both windows endpoints now configured and are sending data.</p>
<hr>
<h2 id="creating-splunk-alerts">Creating Splunk Alerts</h2>
<p><em>Detecting unauthorized successful RDP authentications</em>
(Example Scenario)</p>
<p>My public IP starts with <code>49.*</code> , hypothetically lets say, if an authentication comes from any other IP other than that , then it will trigger an alert .</p>
<p><img src="/images/soc-lab-project/17.png"></p>
<p>This is the query that i created in splunk :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-C" data-lang="C"><span style="display:flex;"><span>index<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;companyx-ad&#34;</span> EventCode<span style="color:#f92672">=</span><span style="color:#ae81ff">4624</span> (Logon_Type<span style="color:#f92672">=</span><span style="color:#ae81ff">7</span> OR Logon_Type<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>) Source_Network_Address<span style="color:#f92672">=*</span> Source_Network_Address<span style="color:#f92672">!=</span><span style="color:#ae81ff">49.</span><span style="color:#f92672">*</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Logon Type <span style="color:#ae81ff">7</span> occurs when a user unlocks their machine
</span></span><span style="display:flex;"><span>Logon Type <span style="color:#ae81ff">10</span> indicates a user logging into a computer remotely
</span></span></code></pre></div><p>I will login from a kali machine with VPN to trigger this alert . I have also set my firewall to accept RDP connections from <code>anywhere</code>.</p>
<p>Here i got a result back after running above query while earlier it was null.</p>
<p><img src="/images/soc-lab-project/18.png">
A successful login from Sweden.</p>
<p>Cleaning up the query a bit more by using <code>stats</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>index<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;companyx-ad&#34;</span> EventCode<span style="color:#f92672">=</span><span style="color:#ae81ff">4624</span> (Logon_Type<span style="color:#f92672">=</span><span style="color:#ae81ff">7</span> OR Logon_Type<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span>) Source_Network_Address<span style="color:#f92672">=*</span> Source_Network_Address<span style="color:#f92672">!=</span><span style="color:#ae81ff">49.</span><span style="color:#f92672">*</span> Source_Network_Address<span style="color:#f92672">!=</span><span style="color:#e6db74">&#34;-&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">|</span> stats count by action, user, ComputerName, _time, Source_Network_Address, Logon_Type
</span></span></code></pre></div><p>Here are the results:</p>
<p><img src="/images/soc-lab-project/19.png"></p>
<p>I can now save this query as an alert to run it every hour or less depending on the situation with a severity of <code>Medium</code>.</p>
<p><img src="/images/soc-lab-project/20.png"></p>
<p>That was an example alert. We can add more and save them.</p>
<hr>
<h2 id="integrating-slack-and-shuffle-soar">Integrating Slack and Shuffle (SOAR)</h2>
<p><em>Automating alerts with Shuffle SOAR</em></p>
<p><code>Shuffle allows users to create workflows to automate various security tasks and integrate with different security tools.</code> ~ google.</p>
<p>I created an account and linked the webhook URI to splunk&rsquo;s alert edit section.</p>
<p><img src="/images/soc-lab-project/21.png"></p>
<p>Started the webhook and it generated alerts based on the alert conditions.</p>
<p>I got an alert from splunk:</p>
<p><img src="/images/soc-lab-project/22.png"></p>
<p>The alerting works and now i want it all sent to my slack as a notification so i can get notified to my phone etc, even when i am AFK.</p>
<p>Linked slack and authenticated to receive alerts.</p>
<p><img src="/images/soc-lab-project/23.png"></p>
<p>Following up, I clicked the slack block and filled in the values . In the <code>Find Actions</code> field , i selected <code>Chat Postmessage</code> meaning i want the slack alert bot to send me message . In the <code>Text</code> field , i filled up the important parameters that i want to see in an alert like username , time etc.</p>
<p><img src="/images/soc-lab-project/24.png"></p>
<p>I was stuck for a while on linking and receiving alerts, but I eventually figured it out. It&rsquo;s now sending me alerts. :</p>
<p><img src="/images/soc-lab-project/25.png"></p>
<p>Here the time is in epoch time, we can convert it to human readable too.
Use this to convert <code>https://www.epochconverter.com/</code></p>
<p>Converted Time :
<code>GMT: Saturday, July 19, 2025 6:16:19 PM</code></p>
<p>__</p>
<h3 id="sending-alerts-through-emails">Sending alerts through Emails</h3>
<p>Now that we sent alerts through slack notifications , its time for email notifications.</p>
<p>We can now for example , include user input. It can work something like <code>&quot;Do you want to disable &lt;username&gt; user?&quot;</code></p>
<p>The alerts can be emailed to respective SOC analyst&rsquo;s shared email so that all the soc analysts on the shift can see it. There are many options in shuffle like <code>user-input</code> app . There is even a SMS option.</p>
<p>Shuffle is very versatile so we can drag and drop many different apps and connect/link the nodes to it and make the workflow to our liking.
For example , lets go beyond this and ask the analyst if <code>he/she wants to disable that particular account</code>. To achieve that , i must connect the <code>user-action</code> app to <code>active directory</code> app. There is a disable user option already in the AD app, i will select that and fill in the required values. I will also allow port 389 in the firewall for AD services.</p>
<p>After running the workflow in shuffle, i received this alert email:</p>
<p><img src="/images/soc-lab-project/26.png"></p>
<p>This email contains yes and no, clicking on yes disables the user and no does nothing.</p>
<p><img src="/images/soc-lab-project/27.png"></p>
<p>I selected Yes here and it was working as expected.
As we can see , the user Jenny has been disabled (indicative by the downward arrow)</p>
<p><img src="/images/soc-lab-project/28.png"></p>
<p>As well as a text in slack channel saying that the user has been disabled:</p>
<p><img src="/images/soc-lab-project/29.png"></p>
<p>This was the final iteration of the workflow that was used:</p>
<p><img src="/images/soc-lab-project/30.png"></p>
<h5 id="quick-fixes">Quick fixes:</h5>
<p>I had to create another account with domain admin privileges in order authenticate to AD in shuffle.
Also many of things that I did here like RDP from <code>anywhere</code> , is only for testing purposes only. Never unnecessary ports to the internet.</p>
<hr>
<h2 id="conclusion">Conclusion</h2>
<p>This was a great SOC Active Directory lab project as I got to experience many technologies hands on and also got a glimpse of what a real SOC environment may look like. This project helped me understand how real-world SOC environments function by simulating Active Directory attacks and automating alerting using Splunk, Shuffle (SOAR), and Slack. While setting up the workflow in Shuffle, I faced issues with authentication and message formatting but resolving them taught me how important proper configuration and testing are in incident response automation . I also gained practical experience in building detection rules and sending actionable alerts to Slack channels â mimicking how modern security teams stay responsive in real time.</p>
<p>I have never used tools like Shuffle before so using it in this project was very insightful.</p>
<p>Overall, this was a valuable hands-on exercise in designing and operating a mini cloud-based SOC.</p>
]]></content>
        </item>
        
    </channel>
</rss>
